name: CI/CD to Azure AKS

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: ashwinacr123
  IMAGE_NAME: flaskapp
  RESOURCE_GROUP: flask-aks-rg
  AKS_CLUSTER_NAME: flask-aks-cluster

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # --- Checkout repo ---
    - name: Checkout code
      uses: actions/checkout@v4

    # --- Azure login ---
    - name: Log in to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # --- Set up Docker Buildx (for caching) ---
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # --- Log in to Azure Container Registry ---
    - name: Log in to ACR
      run: |
        az acr login --name $AZURE_CONTAINER_REGISTRY

    # --- Build and push Docker image with caching ---
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
          ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # --- Get AKS credentials ---
    - name: Get AKS credentials
      run: |
        az aks get-credentials \
          --resource-group $RESOURCE_GROUP \
          --name $AKS_CLUSTER_NAME \
          --overwrite-existing

    # --- Update deployment with the new image ---
    - name: Deploy to AKS
      run: |
        kubectl set image deployment/flask-app flask-app=${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} --record
        kubectl rollout status deployment/flask-app --timeout=120s
        kubectl get svc
